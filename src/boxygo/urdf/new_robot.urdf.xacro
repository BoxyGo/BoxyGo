<?xml version="1.0"?>
<robot name="delivery_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Właściwości -->
  <xacro:property name="body_length" value="0.84"/>
  <xacro:property name="body_width" value="0.58"/>
  <xacro:property name="body_height" value="0.5"/>
  <xacro:property name="rocker_y_offset" value="0.185"/> 
  <xacro:property name="rocker_z_offset" value="0.1126"/>
  <xacro:property name="wheel_radius" value="0.08255"/>
  <xacro:property name="wheel_width" value="0.05"/> 
  <xacro:property name="wheel_gap" value="0.275"/>
  <xacro:property name="wheel_y_offset" value="0.035"/> 
  <xacro:property name="wheel_z_offset" value="-0.1076"/>
  <xacro:property name="wheel_front_y_offset" value="${rocker_y_offset + wheel_y_offset}"/> 
  <xacro:property name="wheel_front_z_offset" value="${rocker_z_offset + wheel_z_offset}"/>
  <xacro:property name="pkg_path" value="$(find boxygo)"/>


  <!-- Materiały -->
  <material name="black"><color rgba="0 0 0 1"/></material>
  <material name="white"><color rgba="0.7 0.7 0.7 0.5"/></material>
  <material name="grey"><color rgba="0.4 0.4 0.4 1"/></material>


  <!-- Rama -->
  <link name="base_link">
    <visual>
      <geometry>
        <mesh filename="file://${pkg_path}/meshes/frame.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="file://${pkg_path}/meshes/frame.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="23.95"/>
      <origin xyz="-0.043307 0.002049 0.099983" rpy="0 0 0"/>
      <inertia ixx="1.144" iyy="1.461" izz="2.401" ixy="0.003886" ixz="0.04347" iyz="0.00184"/>
    </inertial>
  </link>


  <!-- Korpus -->
  <link name="body_link">
    <visual>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10"/>
      <origin xyz="0.42 0.29 0.25" rpy="0 0 0"/>
      <inertia ixx="0.796" iyy="0.869" izz="0.488" ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>  
  
  <joint name="body_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="body_link"/>
    <origin xyz="0 0 ${body_height/2 + 0.195}" rpy="0 0 0"/>
  </joint>


  <!-- Belki -->
  <link name="right_rocker_beam">
    <visual>
      <geometry>
        <mesh filename="file://${pkg_path}/meshes/bogie_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${-math.pi/2}"/>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="file://${pkg_path}/meshes/bogie_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${-math.pi/2}"/>
    </collision>
    <inertial>
      <mass value="1.47"/>
      <origin xyz="0.020269 0.000002 -0.062768" rpy="0 0 0"/>
      <inertia ixx="0.01738" iyy="0.003959" izz="0.01506" ixy="0.000087" ixz="0.0001250" iyz="-0.000308"/>
    </inertial>
  </link>

  <joint name="right_rocker_beam_joint" type="revolute">
    <parent link="base_link"/>
    <child link="right_rocker_beam"/>
    <origin xyz="${-wheel_gap/2+0.015} ${-rocker_y_offset} ${rocker_z_offset}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit lower="${-math.pi/8}" upper="${math.pi/8}" effort="10.0" velocity="10.0"/>
    <dynamics damping="0.01" friction="0.001"/>
  </joint>

  <link name="left_rocker_beam">
    <visual>
      <geometry>
        <mesh filename="file://${pkg_path}/meshes/bogie_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${math.pi/2}"/>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="file://${pkg_path}/meshes/bogie_arm.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${math.pi/2}"/>
    </collision>
    <inertial>
      <mass value="1.47"/>
      <origin xyz="0.020269 0.000002 -0.062768" rpy="0 0 0"/>
      <inertia ixx="0.01738" iyy="0.003959" izz="0.01506" ixy="0.000087" ixz="0.0001250" iyz="-0.000308"/>
    </inertial>
  </link>

  <joint name="left_rocker_beam_joint" type="revolute">
    <parent link="base_link"/>
    <child link="left_rocker_beam"/>
    <origin xyz="${-wheel_gap/2+0.015} ${rocker_y_offset} ${rocker_z_offset}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <limit lower="${-math.pi/8}" upper="${math.pi/8}" effort="10.0" velocity="10.0"/>
    <dynamics damping="0.01" friction="0.001"/>
  </joint>


  <!-- Makro koła -->
  <xacro:macro name="wheel" params="side parent_link wheel_side_sign index x_offset y_offset z_offset">
    <link name="${side}_wheel_${index}">
      <visual>
        <geometry>
          <mesh filename="file://${pkg_path}/meshes/hoverboard_wheel.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 ${wheel_side_sign * math.pi/2}"/>
        <material name="grey"/>
      </visual>
      <collision>
        <geometry>
          <mesh filename="file://${pkg_path}/meshes/hoverboard_wheel.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 ${wheel_side_sign * math.pi/2}"/>
      </collision>
      <inertial> 
        <mass value="3.225"/>
        <origin xyz="0.043707 0.000011 0.000006" rpy="0 0 0"/>
        <inertia ixx="0.008799" iyy="0.005756" izz="0.005898" ixy="-0.000022" ixz="-0.0000043" iyz="0.000025"/>
      </inertial>
    </link>
    <gazebo reference="${side}_wheel_${index}">
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
      <kp>100000.0</kp>
      <kd>50.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
    </gazebo>
    <joint name="${side}_wheel_${index}_joint" type="continuous">
      <parent link="${parent_link}"/>
      <child link="${side}_wheel_${index}"/>
      <origin xyz="${x_offset} ${y_offset} ${z_offset}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <limit effort="10.0" velocity="10.0"/>
      <dynamics damping="0.01" friction="0.001"/>
    </joint>
    <transmission name="${side}_wheel_${index}_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${side}_wheel_${index}_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${side}_wheel_${index}_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <!-- Koła -->
  <xacro:wheel side="left" parent_link="base_link" wheel_side_sign="1" index="1" x_offset="${wheel_gap+0.015}" y_offset="${wheel_front_y_offset}" z_offset="${wheel_front_z_offset}"/>
  <xacro:wheel side="left" parent_link="left_rocker_beam" wheel_side_sign="1" index="2" x_offset="${wheel_gap/2}" y_offset="${wheel_y_offset}" z_offset="${wheel_z_offset}"/>
  <xacro:wheel side="left" parent_link="left_rocker_beam" wheel_side_sign="1" index="3" x_offset="${-wheel_gap/2}" y_offset="${wheel_y_offset}" z_offset="${wheel_z_offset}"/>
  <xacro:wheel side="right" parent_link="base_link" wheel_side_sign="-1" index="1" x_offset="${wheel_gap+0.015}" y_offset="${-wheel_front_y_offset}" z_offset="${wheel_front_z_offset}"/>
  <xacro:wheel side="right" parent_link="right_rocker_beam" wheel_side_sign="-1" index="2" x_offset="${wheel_gap/2}" y_offset="${-wheel_y_offset}" z_offset="${wheel_z_offset}"/>
  <xacro:wheel side="right" parent_link="right_rocker_beam" wheel_side_sign="-1" index="3" x_offset="${-wheel_gap/2}" y_offset="${-wheel_y_offset}" z_offset="${wheel_z_offset}"/>


  <!-- Gazebo - kolor -->
  <gazebo reference="left_wheel_1">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="left_wheel_2">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="left_wheel_3">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="right_wheel_1">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="right_wheel_2">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="right_wheel_3">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="left_rocker_beam">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="right_rocker_beam">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Plugin ros2_control -->
  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
      <update_rate>60</update_rate>
      <parameters>${pkg_path}/config/diff_drive_controller.yaml</parameters>
    </plugin>
  </gazebo>

  <!-- ros2_control hardware -->
  <ros2_control name="BoxyGoSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="left_wheel_1_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="left_wheel_2_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="left_wheel_3_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_1_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_2_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_3_joint">
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>

    <joint name="left_rocker_beam_joint">
      <command_interface name="position"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_rocker_beam_joint">
      <command_interface name="position"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

</robot>